{
    "model_type": "diffusion_cond",
    "sample_size": 441000,
    "sample_rate": 44100,
    "audio_channels": 2,
    "precision": "bf16-mixed",
    "model": {
        "pretransform": {
            "type": "autoencoder",
            "iterate_batch": true,
            "config": {
                "encoder": {
                    "type": "oobleck",
                    "config": {
                        "in_channels": 2,
                        "channels": 128,
                        "c_mults": [1, 2, 4, 8, 16],
                        "strides": [2, 4, 4, 8, 8],
                        "latent_dim": 128,
                        "use_snake": true
                    }
                },
                "decoder": {
                    "type": "oobleck",
                    "config": {
                        "out_channels": 2,
                        "channels": 128,
                        "c_mults": [1, 2, 4, 8, 16],
                        "strides": [2, 4, 4, 8, 8],
                        "latent_dim": 64,
                        "use_snake": true,
                        "final_tanh": false
                    }
                },
                "bottleneck": {
                    "type": "vae"
                },
                "latent_dim": 64,
                "downsampling_ratio": 2048,
                "io_channels": 2
            }
        },
        "conditioning": {
            "configs": [
                {
                    "id": "prompt",
                    "type": "t5",
                    "config": {
                        "t5_model_name": "t5-base",
                        "max_length": 512
                    }
                },
                {
                    "id": "seconds_start",
                    "type": "number",
                    "config": {
                        "min_val": 0,
                        "max_val": 512
                    }
                },
                {
                    "id": "seconds_total",
                    "type": "number",
                    "config": {
                        "min_val": 0,
                        "max_val": 512
                    }
                }
            ],
            "cond_dim": 768
        },
        "diffusion": {
            "cross_attention_cond_ids": ["prompt", "seconds_start", "seconds_total"],
            "global_cond_ids": ["seconds_start", "seconds_total"],
            "type": "dit",
            "diffusion_objective": "rectified_flow",
            "config": {
                "io_channels": 64,
                "embed_dim": 1536,
                "depth": 24,
                "num_heads": 24,
                "cond_token_dim": 768,
                "global_cond_dim": 1536,
                "project_cond_tokens": false,
                "transformer_type": "etta_transformer",
                "global_cond_type": "adaLN",
                "is_causal": false,
                "pos_emb_name": "rope",
                "rope_base": 16384,
                "use_flash_attention": true,
                "deterministic": false,
                "p_dropout": 0.1,
                "apply_norm_to_cond": true,
                "kernel_size": 1,
                "context_xattn": {
                    "n_heads": 16,
                    "d_heads": 768,
                    "pos_emb_name": ""
                }
            }
        },
        "io_channels": 64
    },
    "training": {
        "max_steps": 1000000,
        "timestep_sampler": "logit_normal",
        "use_ema": true,
        "log_loss_info": false,
        "optimizer_configs": {
            "diffusion": {
                "optimizer": {
                    "type": "AdamW",
                    "config": {
                        "lr": 1e-4,
                        "betas": [0.9, 0.999],
                        "weight_decay": 1e-3
                    }
                },
                "scheduler": {
                    "type": "InverseLR",
                    "config": {
                        "inv_gamma": 1000000,
                        "power": 0.5,
                        "warmup": 0.99
                    }
                }
            }
        },
        "demo": {
            "demo_every": 10000,
            "demo_steps": 100,
            "num_demos": 4,
            "demo_cond": [
                {"prompt": "A hip-hop track using sounds from a construction siteâ€”hammering nails as the beat, drilling sounds as scratches, and metal clanks as rhythm accents.", "seconds_start": 0, "seconds_total": 10},
                {"prompt": "A saxophone that sounds like meowing of cat.", "seconds_start": 0, "seconds_total": 10},
                {"prompt": "Dogs barking, birds chirping, and electronic dance music.", "seconds_start": 0, "seconds_total": 10},
                {"prompt": "A soundscape with a choir of alarm siren from an ambulance car but to produce a lush and calm choir composition with sustained chords.", "seconds_start": 0, "seconds_total": 10}
            ],
            "demo_cfg_scales": [1, 3.5, 6]
        }
    }
}